name: Build Minecraft Plugin

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint-actions:
    name: üßπ Lint Actions
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - uses: actions/checkout@main

      - uses: devops-actions/actionlint@main

  lint-links:
    name: üßπ Lint Links
    runs-on: ubuntu-latest

    permissions:
      checks: write

    steps:
      - uses: actions/checkout@main

      - name: Lint Links (push)
        if: github.event_name != 'pull_request'
        uses: umbrelladocs/action-linkspector@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-check
          fail_level: any

      - name: Lint Links (PR)
        if: github.event_name == 'pull_request'
        uses: umbrelladocs/action-linkspector@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          fail_level: any

  lint-markdown:
    name: üßπ Lint Markdown
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Lint Markdown files
        uses: DavidAnson/markdownlint-cli2-action@main
        with:
          globs: '**/*.md' # Checks all Markdown files in the repository
          fix: true # automatically fixes simple problems
          config: '.markdownlint.jsonc'  # if you have a configuration file
  #        continue-on-error: true  # to prevent the build from crashing due to errors in the documentation

  security-scan:
    name: üîê CodeQL Security Scan
    runs-on: ubuntu-latest

    permissions:
      actions: read
      security-events: write

    steps:
      - uses: actions/checkout@main

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java-kotlin

      - name: Set up JDK 17
        uses: actions/setup-java@main
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@main

      - name: Build for CodeQL
        run: ./gradlew build -x test

      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  security-scan-snyk:
    name: üîê Snyk Security Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Set up JDK 17
        uses: actions/setup-java@main
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@main

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@master
        continue-on-error: true # Don't stop the pipeline because maybe snyk api limit
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          JAVA_HOME: /opt/java/openjdk # Enforce directory expected by the Snyk container
        with:
          args: --severity-threshold=high

  security-scan-trivy:
    name: üîê Trivy Security Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Run Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  security-scan-osv:
    name: üîêÔ∏è OSV Security Scan
    runs-on: ubuntu-latest

    permissions:
      actions: read
      security-events: write

    steps:
      - uses: actions/checkout@main

      - name: Run OSV Scanner (full)
        if: github.event_name != 'pull_request'
        uses: google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@v2.2.1
        with:
          scan-args: |-
            --skip-git
            --format=sarif
            --output=osv-results.sarif
            --recursive
            ./

      - name: Run OSV Scanner (PR)
        if: github.event_name == 'pull_request'
        uses: google/osv-scanner-action/.github/workflows/osv-scanner-reusable-pr.yml@v2.2.1
        with:
          scan-args: |-
            --skip-git
            --format=sarif
            --output=osv-results.sarif
            --recursive
            ./

      - name: Upload OSV scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'osv-results.sarif'

  dependency-review:
    name: üß© Dependency Review
    runs-on: ubuntu-latest

    # Skip Dependency Review for push
    if: github.event_name == 'pull_request'

    permissions:
      pull-requests: write

    steps:
      - uses: actions/checkout@main

      - name: Dependency Review
        uses: actions/dependency-review-action@main
        with:
          fail-on-severity: high

  secrets-scan:
    name: üîë Secrets Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0  # Required for diff scan

      - name: TruffleHog Secrets Scan (full)
        if: github.event_name != 'pull_request'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          extra_args: --results=verified,unknown

      - name: TruffleHog Secrets Scan (diff)
        if: github.event_name == 'pull_request'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}
          extra_args: --results=verified,unknown

  build:
    name: üèóÔ∏è Build Plugin
    needs: [ lint-actions, lint-links, lint-markdown, security-scan, security-scan-snyk, security-scan-trivy, security-scan-osv, secrets-scan, dependency-review ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@main

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@main
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@main

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: PermGuard
          path: ${{ github.workspace }}/build/libs/
